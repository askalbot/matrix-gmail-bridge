{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Matrix Gmail Bridge This is an implementation of simple puppeted matrix bridge for gmail. Bridging Limitation Simple Puppet Right now it's a simple puppeted bridge so it can be used to send/recv emails through matrix, but it won't be able to reflect mails sent using gmail platform. Assuming Bob is using bridge to interact with gmail: Bob send a mail to Alice using matrix: visible on matrix to Bob Bob recieves a mail from Alice: visible on matrix to Bob Bob send a mail to Alice using gmail (web/app): NOT visible on matrix to Bob Partial History Bridge does not sync all the activities from a thread. Only the recent ones for first time. After that all the messages will be synced. General Mappings Threads Every thread will be represented by a room in matrix. For example a thread with id xyz will be represented by room alias #_gmail_bridge_xyz.emailofuser_at_example.com Emails are added to alias to avoid conflicts when multiple users of bridge are part of same thread. Email Addresses Every Email Address is mapped to a matrix (virtual) user. For example an email address alice@example.com will be represented by @_gmail_bridge_alice_at_example.com Encryption There is no encryption as of now. And even when it'll be implemented, it won't be end-to-end as we will need to decrypt the message before sending it.","title":"Introduction"},{"location":"#matrix-gmail-bridge","text":"This is an implementation of simple puppeted matrix bridge for gmail.","title":"Matrix Gmail Bridge"},{"location":"#bridging-limitation","text":"","title":"Bridging Limitation"},{"location":"#simple-puppet","text":"Right now it's a simple puppeted bridge so it can be used to send/recv emails through matrix, but it won't be able to reflect mails sent using gmail platform. Assuming Bob is using bridge to interact with gmail: Bob send a mail to Alice using matrix: visible on matrix to Bob Bob recieves a mail from Alice: visible on matrix to Bob Bob send a mail to Alice using gmail (web/app): NOT visible on matrix to Bob","title":"Simple Puppet"},{"location":"#partial-history","text":"Bridge does not sync all the activities from a thread. Only the recent ones for first time. After that all the messages will be synced.","title":"Partial History"},{"location":"#general-mappings","text":"","title":"General Mappings"},{"location":"#threads","text":"Every thread will be represented by a room in matrix. For example a thread with id xyz will be represented by room alias #_gmail_bridge_xyz.emailofuser_at_example.com Emails are added to alias to avoid conflicts when multiple users of bridge are part of same thread.","title":"Threads"},{"location":"#email-addresses","text":"Every Email Address is mapped to a matrix (virtual) user. For example an email address alice@example.com will be represented by @_gmail_bridge_alice_at_example.com","title":"Email Addresses"},{"location":"#encryption","text":"There is no encryption as of now. And even when it'll be implemented, it won't be end-to-end as we will need to decrypt the message before sending it.","title":"Encryption"},{"location":"behaviour/","text":"Internals Puppet Mappings External Email <-> Matrix Virtual User Gmail Thread <-> Matrix Room Details Gmails when sent to matrix will have following metadata: { \"gmail_id\" : \"Id_of_the_mail\" , \"attachment_ids\" : [ \"Ids_of_previous_messages_that_were_attached_to_this_body\" ] } Gmails with attachement will be sent in multiple messages First all the attachements one-by-one and at the last the body only the last message will have the metadata defined above Gmail Quotes are removed TO and CC you can specify TO/CC for a thread by inviting all the emails and setting there power-levels. Users with power-level 0 will be used as TO field of email and users with power-level 1 will be used as CC . For example if you want to send email to alice@example.com as TO and bob@example.com as CC , then you should: Invite @_gmail_bridge_alice_at_example.com and @_gmail_bridge_bob_at_example.com to a room Set power-level for @_gmail_bridge_alice_at_example.com as 0 and power-level for @_gmail_bridge_bob_at_example.com as -1 . Same can be done already existing thread where you can invite virtual users or change there power-levels to specify TO/CC for future emails.","title":"Behaviour"},{"location":"behaviour/#internals","text":"","title":"Internals"},{"location":"behaviour/#puppet-mappings","text":"External Email <-> Matrix Virtual User Gmail Thread <-> Matrix Room","title":"Puppet Mappings"},{"location":"behaviour/#details","text":"Gmails when sent to matrix will have following metadata: { \"gmail_id\" : \"Id_of_the_mail\" , \"attachment_ids\" : [ \"Ids_of_previous_messages_that_were_attached_to_this_body\" ] } Gmails with attachement will be sent in multiple messages First all the attachements one-by-one and at the last the body only the last message will have the metadata defined above Gmail Quotes are removed","title":"Details"},{"location":"behaviour/#to-and-cc","text":"you can specify TO/CC for a thread by inviting all the emails and setting there power-levels. Users with power-level 0 will be used as TO field of email and users with power-level 1 will be used as CC . For example if you want to send email to alice@example.com as TO and bob@example.com as CC , then you should: Invite @_gmail_bridge_alice_at_example.com and @_gmail_bridge_bob_at_example.com to a room Set power-level for @_gmail_bridge_alice_at_example.com as 0 and power-level for @_gmail_bridge_bob_at_example.com as -1 . Same can be done already existing thread where you can invite virtual users or change there power-levels to specify TO/CC for future emails.","title":"TO and CC"},{"location":"configuration/","text":"Configuration Options AS_TOKEN Token that'll be used by homeserver to authenticate appservice. This of this as a password. It should be a randomly generated string. HS_TOKEN Token that'll be used by bridge to authenticate homeserver. This will be used to verify that events that bridge recieves are coming from the homeserver. It should be a randomly generated string. BRIDGE_ID ID for this matrix bridge\", default=gmail BRIDGE_URL url(without port) by which homeserver can access the bridge default=http://localhost PORT port to start the bridge on default=8010 SENDER_LOCALPART Bridge Localpart default=appservice-gmail NAMESPACE_PREFIX prefix to use for room aliases and users created by this bridge default= gmail_bridge HOMESERVER_URL url by which bridge can access homeserver HOMESERVER_NAME Name of homeserver HOST hostname to use for starting bridge webserver default=localhost GMAIL_CLIENT_ID Gmail Client Id from Oauth credentials from google cloud project. GMAIL_CLIENT_SECRET Gmail Client Secret from Oauth credentials from google cloud project. DEFAULT_EMAIL_NAME (Optional) default email display name to use for sending mails. GMAIL_RECHECK_SECONDS Interval between polling gmail api for new mails. (default is every 5 minutes) default=300","title":"Configuration"},{"location":"configuration/#configuration-options","text":"","title":"Configuration Options"},{"location":"configuration/#as_token","text":"Token that'll be used by homeserver to authenticate appservice. This of this as a password. It should be a randomly generated string.","title":"AS_TOKEN"},{"location":"configuration/#hs_token","text":"Token that'll be used by bridge to authenticate homeserver. This will be used to verify that events that bridge recieves are coming from the homeserver. It should be a randomly generated string.","title":"HS_TOKEN"},{"location":"configuration/#bridge_id","text":"ID for this matrix bridge\", default=gmail","title":"BRIDGE_ID"},{"location":"configuration/#bridge_url","text":"url(without port) by which homeserver can access the bridge default=http://localhost","title":"BRIDGE_URL"},{"location":"configuration/#port","text":"port to start the bridge on default=8010","title":"PORT"},{"location":"configuration/#sender_localpart","text":"Bridge Localpart default=appservice-gmail","title":"SENDER_LOCALPART"},{"location":"configuration/#namespace_prefix","text":"prefix to use for room aliases and users created by this bridge default= gmail_bridge","title":"NAMESPACE_PREFIX"},{"location":"configuration/#homeserver_url","text":"url by which bridge can access homeserver","title":"HOMESERVER_URL"},{"location":"configuration/#homeserver_name","text":"Name of homeserver","title":"HOMESERVER_NAME"},{"location":"configuration/#host","text":"hostname to use for starting bridge webserver default=localhost","title":"HOST"},{"location":"configuration/#gmail_client_id","text":"Gmail Client Id from Oauth credentials from google cloud project.","title":"GMAIL_CLIENT_ID"},{"location":"configuration/#gmail_client_secret","text":"Gmail Client Secret from Oauth credentials from google cloud project.","title":"GMAIL_CLIENT_SECRET"},{"location":"configuration/#default_email_name-optional","text":"default email display name to use for sending mails.","title":"DEFAULT_EMAIL_NAME (Optional)"},{"location":"configuration/#gmail_recheck_seconds","text":"Interval between polling gmail api for new mails. (default is every 5 minutes) default=300","title":"GMAIL_RECHECK_SECONDS"},{"location":"quickstart/","text":"Quick Start In this guide we'll setup the bridge and go through basic usage. Requirements A running homeserver (that you can manage, specifically restart) A google cloud acount (billing not required) Gmail Setup Create Google Cloud project and enable Gmail Api and People Api in the project. Create Oauth credentials with following scopes: https://www.googleapis.com/auth/gmail.readonly https://www.googleapis.com/auth/gmail.compose https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile Bridge Setup Get sample config file: docker run --rm \\ ghcr.io/askalbot/matrix-gmail-bridge:main \\ python3 -m app.main bridge_config > config.yaml Update config.yaml according to your project. Generate Appservice config (this will be used by homeserver): docker run --rm \\ -e GMAIL_BRIDGE_CONFIG_PATH = \"/config.yaml\" \\ -v $PWD /config.yaml:/config.yaml \\ ghcr.io/askalbot/matrix-gmail-bridge:main \\ python3 -m app.main hs_config > gmail_bridge.yaml Add gmail_bridge.yaml file to homeserver config. Restart homeserver. Start bridge: docker run --rm \\ -e GMAIL_BRIDGE_CONFIG_PATH = \"/config.yaml\" \\ -v $PWD /config.yaml:/config.yaml \\ ghcr.io/askalbot/matrix-gmail-bridge:main \\ python3 -m app.main run_server Login Create a new room with encryption disabled (This room will be referred as dm in rest of document) invite appservice to the room @gmail:example.com (based on default config) appservice will join the room and send instructions. send msg start to start the oauth flow. Go to link sent by appservice, allow all scopes and copy token. Send token in room. Appservice will send an confirmation message if oauth was successful. You can check current status by sending status in dm User Config There are two configuration options available to each user. Name Send name Alice (in dm ) to use Alice as display name for mails. Name can contain spaces. Email Alias Not yet tested Send email emailYouWantToUse@example.com (in dm ) to use emailYouWantToUse@example.com for sending mails. This email address should be configured as alias in your gmail account. Otherwise gmail will fallback to default email address. Starting a new thread Create a new room with encryption disabled Invite virtual user to room to whom the email should be sent. To send email to myemail@gmail.com , you should invite @_gmail_bridge_myemail_at_gmail.com:example.com (based on default config) Refer to Behaviour Docs for more details If the email is correct and bridge is correctly running then the invitation will be accepted instantly. Send the message in matrix room. This will create a new thread in gmail. Interaction with External Thread On every new thread appservice will invite you to a new room representing that particular thread. You can join the room and send messages in room.","title":"Quickstart"},{"location":"quickstart/#quick-start","text":"In this guide we'll setup the bridge and go through basic usage.","title":"Quick Start"},{"location":"quickstart/#requirements","text":"A running homeserver (that you can manage, specifically restart) A google cloud acount (billing not required)","title":"Requirements"},{"location":"quickstart/#gmail-setup","text":"Create Google Cloud project and enable Gmail Api and People Api in the project. Create Oauth credentials with following scopes: https://www.googleapis.com/auth/gmail.readonly https://www.googleapis.com/auth/gmail.compose https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile","title":"Gmail Setup"},{"location":"quickstart/#bridge-setup","text":"Get sample config file: docker run --rm \\ ghcr.io/askalbot/matrix-gmail-bridge:main \\ python3 -m app.main bridge_config > config.yaml Update config.yaml according to your project. Generate Appservice config (this will be used by homeserver): docker run --rm \\ -e GMAIL_BRIDGE_CONFIG_PATH = \"/config.yaml\" \\ -v $PWD /config.yaml:/config.yaml \\ ghcr.io/askalbot/matrix-gmail-bridge:main \\ python3 -m app.main hs_config > gmail_bridge.yaml Add gmail_bridge.yaml file to homeserver config. Restart homeserver. Start bridge: docker run --rm \\ -e GMAIL_BRIDGE_CONFIG_PATH = \"/config.yaml\" \\ -v $PWD /config.yaml:/config.yaml \\ ghcr.io/askalbot/matrix-gmail-bridge:main \\ python3 -m app.main run_server","title":"Bridge Setup"},{"location":"quickstart/#login","text":"Create a new room with encryption disabled (This room will be referred as dm in rest of document) invite appservice to the room @gmail:example.com (based on default config) appservice will join the room and send instructions. send msg start to start the oauth flow. Go to link sent by appservice, allow all scopes and copy token. Send token in room. Appservice will send an confirmation message if oauth was successful. You can check current status by sending status in dm","title":"Login"},{"location":"quickstart/#user-config","text":"There are two configuration options available to each user.","title":"User Config"},{"location":"quickstart/#name","text":"Send name Alice (in dm ) to use Alice as display name for mails. Name can contain spaces.","title":"Name"},{"location":"quickstart/#email-alias","text":"Not yet tested Send email emailYouWantToUse@example.com (in dm ) to use emailYouWantToUse@example.com for sending mails. This email address should be configured as alias in your gmail account. Otherwise gmail will fallback to default email address.","title":"Email Alias"},{"location":"quickstart/#starting-a-new-thread","text":"Create a new room with encryption disabled Invite virtual user to room to whom the email should be sent. To send email to myemail@gmail.com , you should invite @_gmail_bridge_myemail_at_gmail.com:example.com (based on default config) Refer to Behaviour Docs for more details If the email is correct and bridge is correctly running then the invitation will be accepted instantly. Send the message in matrix room. This will create a new thread in gmail.","title":"Starting a new thread"},{"location":"quickstart/#interaction-with-external-thread","text":"On every new thread appservice will invite you to a new room representing that particular thread. You can join the room and send messages in room.","title":"Interaction with External Thread"}]}